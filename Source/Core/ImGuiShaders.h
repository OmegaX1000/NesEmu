#pragma once

// Note that approximate gamma-to-linear conversion pow(gamma, 2.2) produces considerably different colors.
static constexpr char GAMMA_TO_LINEAR[] = "((Gamma) < 0.04045 ? (Gamma) / 12.92 : pow(max((Gamma) + 0.055, 0.0) / 1.055, 2.4))";
static constexpr char SRGBA_TO_LINEAR[] =
"col.r = GAMMA_TO_LINEAR(col.r); "
"col.g = GAMMA_TO_LINEAR(col.g); "
"col.b = GAMMA_TO_LINEAR(col.b); "
"col.a = 1.0 - GAMMA_TO_LINEAR(1.0 - col.a);";


static constexpr char VertexShaderHLSL[] = R"(
cbuffer Constants
{
    float4x4 ProjectionMatrix;
}

struct VSInput
{
    float2 pos : ATTRIB0;
    float2 uv  : ATTRIB1;
    float4 col : ATTRIB2;
};

struct PSInput
{
    float4 pos : SV_POSITION;
    float4 col : COLOR;
    float2 uv  : TEXCOORD;
};

void main(in VSInput VSIn, out PSInput PSIn)
{
    PSIn.pos = mul(ProjectionMatrix, float4(VSIn.pos.xy, 0.0, 1.0));
    PSIn.col = VSIn.col;
    PSIn.uv  = VSIn.uv;
}
)";

static constexpr char PixelShaderHLSL[] = R"(
struct PSInput
{
    float4 pos : SV_POSITION;
    float4 col : COLOR;
    float2 uv  : TEXCOORD;
};

Texture2D    Texture;
SamplerState Texture_sampler;

float4 main(in PSInput PSIn) : SV_Target
{
    float4 col = Texture.Sample(Texture_sampler, PSIn.uv) * PSIn.col;
    col.rgb *= col.a;
    SRGBA_TO_LINEAR(col)
    return col;
}
)";


static constexpr char VertexShaderGLSL[] = R"(
#ifdef VULKAN
#   define BINDING(X) layout(binding=X)
#   define OUT_LOCATION(X) layout(location=X) // Requires separable programs
#else
#   define BINDING(X)
#   define OUT_LOCATION(X)
#endif
BINDING(0) uniform Constants
{
    mat4 ProjectionMatrix;
};

layout(location = 0) in vec2 in_pos;
layout(location = 1) in vec2 in_uv;
layout(location = 2) in vec4 in_col;

OUT_LOCATION(0) out vec4 vsout_col;
OUT_LOCATION(1) out vec2 vsout_uv;

#ifndef GL_ES
out gl_PerVertex
{
    vec4 gl_Position;
};
#endif

void main()
{
    gl_Position = ProjectionMatrix * vec4(in_pos.xy, 0.0, 1.0);
    vsout_col = in_col;
    vsout_uv  = in_uv;
}
)";

static constexpr char PixelShaderGLSL[] = R"(
#ifdef VULKAN
#   define BINDING(X) layout(binding=X)
#   define IN_LOCATION(X) layout(location=X) // Requires separable programs
#else
#   define BINDING(X)
#   define IN_LOCATION(X)
#endif
BINDING(0) uniform sampler2D Texture;

IN_LOCATION(0) in vec4 vsout_col;
IN_LOCATION(1) in vec2 vsout_uv;

layout(location = 0) out vec4 psout_col;

void main()
{
    vec4 col = vsout_col * texture(Texture, vsout_uv);
    col.rgb *= col.a;
    SRGBA_TO_LINEAR(col)
    psout_col = col;
}
)";


// clang-format off

// glslangValidator.exe -V -e main --vn VertexShader_SPIRV ImGUI.vert

static constexpr unsigned int VertexShader_SPIRV[] =
{
	0x07230203,0x00010000,0x0008000a,0x00000028,0x00000000,0x00020011,0x00000001,0x0006000b,
	0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,
	0x000b000f,0x00000000,0x00000004,0x6e69616d,0x00000000,0x0000000a,0x00000016,0x00000020,
	0x00000022,0x00000025,0x00000026,0x00030003,0x00000002,0x000001a4,0x00040005,0x00000004,
	0x6e69616d,0x00000000,0x00060005,0x00000008,0x505f6c67,0x65567265,0x78657472,0x00000000,
	0x00060006,0x00000008,0x00000000,0x505f6c67,0x7469736f,0x006e6f69,0x00030005,0x0000000a,
	0x00000000,0x00050005,0x0000000e,0x736e6f43,0x746e6174,0x00000073,0x00080006,0x0000000e,
	0x00000000,0x6a6f7250,0x69746365,0x614d6e6f,0x78697274,0x00000000,0x00030005,0x00000010,
	0x00000000,0x00040005,0x00000016,0x705f6e69,0x0000736f,0x00050005,0x00000020,0x756f7376,
	0x6f635f74,0x0000006c,0x00040005,0x00000022,0x635f6e69,0x00006c6f,0x00050005,0x00000025,
	0x756f7376,0x76755f74,0x00000000,0x00040005,0x00000026,0x755f6e69,0x00000076,0x00050048,
	0x00000008,0x00000000,0x0000000b,0x00000000,0x00030047,0x00000008,0x00000002,0x00040048,
	0x0000000e,0x00000000,0x00000005,0x00050048,0x0000000e,0x00000000,0x00000023,0x00000000,
	0x00050048,0x0000000e,0x00000000,0x00000007,0x00000010,0x00030047,0x0000000e,0x00000002,
	0x00040047,0x00000010,0x00000022,0x00000000,0x00040047,0x00000010,0x00000021,0x00000000,
	0x00040047,0x00000016,0x0000001e,0x00000000,0x00040047,0x00000020,0x0000001e,0x00000000,
	0x00040047,0x00000022,0x0000001e,0x00000002,0x00040047,0x00000025,0x0000001e,0x00000001,
	0x00040047,0x00000026,0x0000001e,0x00000001,0x00020013,0x00000002,0x00030021,0x00000003,
	0x00000002,0x00030016,0x00000006,0x00000020,0x00040017,0x00000007,0x00000006,0x00000004,
	0x0003001e,0x00000008,0x00000007,0x00040020,0x00000009,0x00000003,0x00000008,0x0004003b,
	0x00000009,0x0000000a,0x00000003,0x00040015,0x0000000b,0x00000020,0x00000001,0x0004002b,
	0x0000000b,0x0000000c,0x00000000,0x00040018,0x0000000d,0x00000007,0x00000004,0x0003001e,
	0x0000000e,0x0000000d,0x00040020,0x0000000f,0x00000002,0x0000000e,0x0004003b,0x0000000f,
	0x00000010,0x00000002,0x00040020,0x00000011,0x00000002,0x0000000d,0x00040017,0x00000014,
	0x00000006,0x00000002,0x00040020,0x00000015,0x00000001,0x00000014,0x0004003b,0x00000015,
	0x00000016,0x00000001,0x0004002b,0x00000006,0x00000018,0x00000000,0x0004002b,0x00000006,
	0x00000019,0x3f800000,0x00040020,0x0000001e,0x00000003,0x00000007,0x0004003b,0x0000001e,
	0x00000020,0x00000003,0x00040020,0x00000021,0x00000001,0x00000007,0x0004003b,0x00000021,
	0x00000022,0x00000001,0x00040020,0x00000024,0x00000003,0x00000014,0x0004003b,0x00000024,
	0x00000025,0x00000003,0x0004003b,0x00000015,0x00000026,0x00000001,0x00050036,0x00000002,
	0x00000004,0x00000000,0x00000003,0x000200f8,0x00000005,0x00050041,0x00000011,0x00000012,
	0x00000010,0x0000000c,0x0004003d,0x0000000d,0x00000013,0x00000012,0x0004003d,0x00000014,
	0x00000017,0x00000016,0x00050051,0x00000006,0x0000001a,0x00000017,0x00000000,0x00050051,
	0x00000006,0x0000001b,0x00000017,0x00000001,0x00070050,0x00000007,0x0000001c,0x0000001a,
	0x0000001b,0x00000018,0x00000019,0x00050091,0x00000007,0x0000001d,0x00000013,0x0000001c,
	0x00050041,0x0000001e,0x0000001f,0x0000000a,0x0000000c,0x0003003e,0x0000001f,0x0000001d,
	0x0004003d,0x00000007,0x00000023,0x00000022,0x0003003e,0x00000020,0x00000023,0x0004003d,
	0x00000014,0x00000027,0x00000026,0x0003003e,0x00000025,0x00000027,0x000100fd,0x00010038
};

static constexpr unsigned int FragmentShader_SPIRV[] =
{
	0x07230203,0x00010000,0x0008000a,0x00000023,0x00000000,0x00020011,0x00000001,0x0006000b,
	0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,
	0x0008000f,0x00000004,0x00000004,0x6e69616d,0x00000000,0x00000009,0x0000000b,0x00000014,
	0x00030010,0x00000004,0x00000007,0x00030003,0x00000002,0x000001a4,0x00040005,0x00000004,
	0x6e69616d,0x00000000,0x00050005,0x00000009,0x756f7370,0x6f635f74,0x0000006c,0x00050005,
	0x0000000b,0x756f7376,0x6f635f74,0x0000006c,0x00040005,0x00000010,0x74786554,0x00657275,
	0x00050005,0x00000014,0x756f7376,0x76755f74,0x00000000,0x00040047,0x00000009,0x0000001e,
	0x00000000,0x00040047,0x0000000b,0x0000001e,0x00000000,0x00040047,0x00000010,0x00000022,
	0x00000000,0x00040047,0x00000010,0x00000021,0x00000000,0x00040047,0x00000014,0x0000001e,
	0x00000001,0x00020013,0x00000002,0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,
	0x00000020,0x00040017,0x00000007,0x00000006,0x00000004,0x00040020,0x00000008,0x00000003,
	0x00000007,0x0004003b,0x00000008,0x00000009,0x00000003,0x00040020,0x0000000a,0x00000001,
	0x00000007,0x0004003b,0x0000000a,0x0000000b,0x00000001,0x00090019,0x0000000d,0x00000006,
	0x00000001,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x0003001b,0x0000000e,
	0x0000000d,0x00040020,0x0000000f,0x00000000,0x0000000e,0x0004003b,0x0000000f,0x00000010,
	0x00000000,0x00040017,0x00000012,0x00000006,0x00000002,0x00040020,0x00000013,0x00000001,
	0x00000012,0x0004003b,0x00000013,0x00000014,0x00000001,0x00040015,0x00000018,0x00000020,
	0x00000000,0x0004002b,0x00000018,0x00000019,0x00000003,0x00040020,0x0000001a,0x00000003,
	0x00000006,0x00040017,0x0000001d,0x00000006,0x00000003,0x00050036,0x00000002,0x00000004,
	0x00000000,0x00000003,0x000200f8,0x00000005,0x0004003d,0x00000007,0x0000000c,0x0000000b,
	0x0004003d,0x0000000e,0x00000011,0x00000010,0x0004003d,0x00000012,0x00000015,0x00000014,
	0x00050057,0x00000007,0x00000016,0x00000011,0x00000015,0x00050085,0x00000007,0x00000017,
	0x0000000c,0x00000016,0x0003003e,0x00000009,0x00000017,0x00050041,0x0000001a,0x0000001b,
	0x00000009,0x00000019,0x0004003d,0x00000006,0x0000001c,0x0000001b,0x0004003d,0x00000007,
	0x0000001e,0x00000009,0x0008004f,0x0000001d,0x0000001f,0x0000001e,0x0000001e,0x00000000,
	0x00000001,0x00000002,0x0005008e,0x0000001d,0x00000020,0x0000001f,0x0000001c,0x0004003d,
	0x00000007,0x00000021,0x00000009,0x0009004f,0x00000007,0x00000022,0x00000021,0x00000020,
	0x00000004,0x00000005,0x00000006,0x00000003,0x0003003e,0x00000009,0x00000022,0x000100fd,
	0x00010038
};

static constexpr unsigned int FragmentShader_Gamma_SPIRV[] =
{
	0x07230203,0x00010000,0x0008000a,0x0000007b,0x00000000,0x00020011,0x00000001,0x0006000b,
	0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,
	0x0008000f,0x00000004,0x00000004,0x6e69616d,0x00000000,0x00000009,0x0000000b,0x00000014,
	0x00030010,0x00000004,0x00000007,0x00030003,0x00000002,0x000001a4,0x00040005,0x00000004,
	0x6e69616d,0x00000000,0x00050005,0x00000009,0x756f7370,0x6f635f74,0x0000006c,0x00050005,
	0x0000000b,0x756f7376,0x6f635f74,0x0000006c,0x00040005,0x00000010,0x74786554,0x00657275,
	0x00050005,0x00000014,0x756f7376,0x76755f74,0x00000000,0x00040047,0x00000009,0x0000001e,
	0x00000000,0x00040047,0x0000000b,0x0000001e,0x00000000,0x00040047,0x00000010,0x00000022,
	0x00000000,0x00040047,0x00000010,0x00000021,0x00000000,0x00040047,0x00000014,0x0000001e,
	0x00000001,0x00020013,0x00000002,0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,
	0x00000020,0x00040017,0x00000007,0x00000006,0x00000004,0x00040020,0x00000008,0x00000003,
	0x00000007,0x0004003b,0x00000008,0x00000009,0x00000003,0x00040020,0x0000000a,0x00000001,
	0x00000007,0x0004003b,0x0000000a,0x0000000b,0x00000001,0x00090019,0x0000000d,0x00000006,
	0x00000001,0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x0003001b,0x0000000e,
	0x0000000d,0x00040020,0x0000000f,0x00000000,0x0000000e,0x0004003b,0x0000000f,0x00000010,
	0x00000000,0x00040017,0x00000012,0x00000006,0x00000002,0x00040020,0x00000013,0x00000001,
	0x00000012,0x0004003b,0x00000013,0x00000014,0x00000001,0x00040015,0x00000018,0x00000020,
	0x00000000,0x0004002b,0x00000018,0x00000019,0x00000003,0x00040020,0x0000001a,0x00000003,
	0x00000006,0x00040017,0x0000001d,0x00000006,0x00000003,0x0004002b,0x00000018,0x00000023,
	0x00000000,0x0004002b,0x00000006,0x00000026,0x3d25aee6,0x00020014,0x00000027,0x00040020,
	0x00000029,0x00000007,0x00000006,0x0004002b,0x00000006,0x0000002f,0x414eb852,0x0004002b,
	0x00000006,0x00000034,0x3d6147ae,0x0004002b,0x00000006,0x00000036,0x00000000,0x0004002b,
	0x00000006,0x00000038,0x3f870a3d,0x0004002b,0x00000006,0x0000003a,0x4019999a,0x0004002b,
	0x00000018,0x0000003e,0x00000001,0x0004002b,0x00000018,0x00000051,0x00000002,0x0004002b,
	0x00000006,0x00000064,0x3f800000,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,
	0x000200f8,0x00000005,0x0004003b,0x00000029,0x0000002a,0x00000007,0x0004003b,0x00000029,
	0x00000042,0x00000007,0x0004003b,0x00000029,0x00000055,0x00000007,0x0004003b,0x00000029,
	0x00000069,0x00000007,0x0004003d,0x00000007,0x0000000c,0x0000000b,0x0004003d,0x0000000e,
	0x00000011,0x00000010,0x0004003d,0x00000012,0x00000015,0x00000014,0x00050057,0x00000007,
	0x00000016,0x00000011,0x00000015,0x00050085,0x00000007,0x00000017,0x0000000c,0x00000016,
	0x0003003e,0x00000009,0x00000017,0x00050041,0x0000001a,0x0000001b,0x00000009,0x00000019,
	0x0004003d,0x00000006,0x0000001c,0x0000001b,0x0004003d,0x00000007,0x0000001e,0x00000009,
	0x0008004f,0x0000001d,0x0000001f,0x0000001e,0x0000001e,0x00000000,0x00000001,0x00000002,
	0x0005008e,0x0000001d,0x00000020,0x0000001f,0x0000001c,0x0004003d,0x00000007,0x00000021,
	0x00000009,0x0009004f,0x00000007,0x00000022,0x00000021,0x00000020,0x00000004,0x00000005,
	0x00000006,0x00000003,0x0003003e,0x00000009,0x00000022,0x00050041,0x0000001a,0x00000024,
	0x00000009,0x00000023,0x0004003d,0x00000006,0x00000025,0x00000024,0x000500b8,0x00000027,
	0x00000028,0x00000025,0x00000026,0x000300f7,0x0000002c,0x00000000,0x000400fa,0x00000028,
	0x0000002b,0x00000031,0x000200f8,0x0000002b,0x00050041,0x0000001a,0x0000002d,0x00000009,
	0x00000023,0x0004003d,0x00000006,0x0000002e,0x0000002d,0x00050088,0x00000006,0x00000030,
	0x0000002e,0x0000002f,0x0003003e,0x0000002a,0x00000030,0x000200f9,0x0000002c,0x000200f8,
	0x00000031,0x00050041,0x0000001a,0x00000032,0x00000009,0x00000023,0x0004003d,0x00000006,
	0x00000033,0x00000032,0x00050081,0x00000006,0x00000035,0x00000033,0x00000034,0x0007000c,
	0x00000006,0x00000037,0x00000001,0x00000028,0x00000035,0x00000036,0x00050088,0x00000006,
	0x00000039,0x00000037,0x00000038,0x0007000c,0x00000006,0x0000003b,0x00000001,0x0000001a,
	0x00000039,0x0000003a,0x0003003e,0x0000002a,0x0000003b,0x000200f9,0x0000002c,0x000200f8,
	0x0000002c,0x0004003d,0x00000006,0x0000003c,0x0000002a,0x00050041,0x0000001a,0x0000003d,
	0x00000009,0x00000023,0x0003003e,0x0000003d,0x0000003c,0x00050041,0x0000001a,0x0000003f,
	0x00000009,0x0000003e,0x0004003d,0x00000006,0x00000040,0x0000003f,0x000500b8,0x00000027,
	0x00000041,0x00000040,0x00000026,0x000300f7,0x00000044,0x00000000,0x000400fa,0x00000041,
	0x00000043,0x00000048,0x000200f8,0x00000043,0x00050041,0x0000001a,0x00000045,0x00000009,
	0x0000003e,0x0004003d,0x00000006,0x00000046,0x00000045,0x00050088,0x00000006,0x00000047,
	0x00000046,0x0000002f,0x0003003e,0x00000042,0x00000047,0x000200f9,0x00000044,0x000200f8,
	0x00000048,0x00050041,0x0000001a,0x00000049,0x00000009,0x0000003e,0x0004003d,0x00000006,
	0x0000004a,0x00000049,0x00050081,0x00000006,0x0000004b,0x0000004a,0x00000034,0x0007000c,
	0x00000006,0x0000004c,0x00000001,0x00000028,0x0000004b,0x00000036,0x00050088,0x00000006,
	0x0000004d,0x0000004c,0x00000038,0x0007000c,0x00000006,0x0000004e,0x00000001,0x0000001a,
	0x0000004d,0x0000003a,0x0003003e,0x00000042,0x0000004e,0x000200f9,0x00000044,0x000200f8,
	0x00000044,0x0004003d,0x00000006,0x0000004f,0x00000042,0x00050041,0x0000001a,0x00000050,
	0x00000009,0x0000003e,0x0003003e,0x00000050,0x0000004f,0x00050041,0x0000001a,0x00000052,
	0x00000009,0x00000051,0x0004003d,0x00000006,0x00000053,0x00000052,0x000500b8,0x00000027,
	0x00000054,0x00000053,0x00000026,0x000300f7,0x00000057,0x00000000,0x000400fa,0x00000054,
	0x00000056,0x0000005b,0x000200f8,0x00000056,0x00050041,0x0000001a,0x00000058,0x00000009,
	0x00000051,0x0004003d,0x00000006,0x00000059,0x00000058,0x00050088,0x00000006,0x0000005a,
	0x00000059,0x0000002f,0x0003003e,0x00000055,0x0000005a,0x000200f9,0x00000057,0x000200f8,
	0x0000005b,0x00050041,0x0000001a,0x0000005c,0x00000009,0x00000051,0x0004003d,0x00000006,
	0x0000005d,0x0000005c,0x00050081,0x00000006,0x0000005e,0x0000005d,0x00000034,0x0007000c,
	0x00000006,0x0000005f,0x00000001,0x00000028,0x0000005e,0x00000036,0x00050088,0x00000006,
	0x00000060,0x0000005f,0x00000038,0x0007000c,0x00000006,0x00000061,0x00000001,0x0000001a,
	0x00000060,0x0000003a,0x0003003e,0x00000055,0x00000061,0x000200f9,0x00000057,0x000200f8,
	0x00000057,0x0004003d,0x00000006,0x00000062,0x00000055,0x00050041,0x0000001a,0x00000063,
	0x00000009,0x00000051,0x0003003e,0x00000063,0x00000062,0x00050041,0x0000001a,0x00000065,
	0x00000009,0x00000019,0x0004003d,0x00000006,0x00000066,0x00000065,0x00050083,0x00000006,
	0x00000067,0x00000064,0x00000066,0x000500b8,0x00000027,0x00000068,0x00000067,0x00000026,
	0x000300f7,0x0000006b,0x00000000,0x000400fa,0x00000068,0x0000006a,0x00000070,0x000200f8,
	0x0000006a,0x00050041,0x0000001a,0x0000006c,0x00000009,0x00000019,0x0004003d,0x00000006,
	0x0000006d,0x0000006c,0x00050083,0x00000006,0x0000006e,0x00000064,0x0000006d,0x00050088,
	0x00000006,0x0000006f,0x0000006e,0x0000002f,0x0003003e,0x00000069,0x0000006f,0x000200f9,
	0x0000006b,0x000200f8,0x00000070,0x00050041,0x0000001a,0x00000071,0x00000009,0x00000019,
	0x0004003d,0x00000006,0x00000072,0x00000071,0x00050083,0x00000006,0x00000073,0x00000064,
	0x00000072,0x00050081,0x00000006,0x00000074,0x00000073,0x00000034,0x0007000c,0x00000006,
	0x00000075,0x00000001,0x00000028,0x00000074,0x00000036,0x00050088,0x00000006,0x00000076,
	0x00000075,0x00000038,0x0007000c,0x00000006,0x00000077,0x00000001,0x0000001a,0x00000076,
	0x0000003a,0x0003003e,0x00000069,0x00000077,0x000200f9,0x0000006b,0x000200f8,0x0000006b,
	0x0004003d,0x00000006,0x00000078,0x00000069,0x00050083,0x00000006,0x00000079,0x00000064,
	0x00000078,0x00050041,0x0000001a,0x0000007a,0x00000009,0x00000019,0x0003003e,0x0000007a,
	0x00000079,0x000100fd,0x00010038
};

static constexpr char ShadersMSL[] = R"(
#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct VSConstants
{
    float4x4 ProjectionMatrix;
};

struct VSIn
{
    float2 pos [[attribute(0)]];
    float2 uv  [[attribute(1)]];
    float4 col [[attribute(2)]];
};

struct VSOut
{
    float4 col [[user(locn0)]];
    float2 uv  [[user(locn1)]];
    float4 pos [[position]];
};

vertex VSOut vs_main(VSIn in [[stage_in]], constant VSConstants& Constants [[buffer(0)]])
{
    VSOut out = {};
    out.pos = Constants.ProjectionMatrix * float4(in.pos, 0.0, 1.0);
    out.col = in.col;
    out.uv  = in.uv;
    return out;
}

struct PSOut
{
    float4 col [[color(0)]];
};

fragment PSOut ps_main(VSOut in [[stage_in]],
                       texture2d<float> Texture [[texture(0)]],
                       sampler Texture_sampler  [[sampler(0)]])
{
    PSOut out = {};

    float4 col = in.col * Texture.sample(Texture_sampler, in.uv);
    col.rgb *= col.a;
    SRGBA_TO_LINEAR(col)
    out.col = col;
    return out;
}
)";